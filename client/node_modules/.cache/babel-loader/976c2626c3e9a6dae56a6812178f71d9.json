{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\VS Code\\\\DA_OSS\\\\client\\\\src\\\\components\\\\RegisterForm.js\";\nimport React, { Component } from \"react\";\nimport \"../css/Register_Login_Form.css\";\nimport axios from \"axios\";\nexport default class RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n    this.Register = this.Register.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeConfirmPassword(e) {\n    this.setState({\n      confirmPassword: e.target.value\n    });\n  }\n\n  resetInput() {\n    this.setState({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    });\n  }\n\n  checkStandardInput() {\n    let error = \"\";\n    let pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\n\n    if (this.state.username.length < 6) {\n      error += \"Username must be at least 6 characters\\n\";\n    }\n\n    if (this.state.password !== this.state.confirmPassword) {\n      error += \"Password is not math confirm password \\n\";\n    }\n\n    if (!pattern.test(this.state.password) || !pattern.test(this.state.confirmPassword)) {\n      error += \"Password must be at least 8 characters and have at least a lowcase, a uppercase, a number\\n\";\n    }\n\n    return error;\n  }\n\n  async Register(e) {\n    e.preventDefault();\n    let standard = this.checkStandardInput();\n\n    if (standard.length > 0) {\n      alert(standard);\n    } else {\n      let user = {\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password\n      };\n      let result = await axios.post(\"https://amadas.herokuapp.com/accounts\", user).then().catch(err => {\n        alert(\"Sign up fail\\n\" + err + \"\\n\");\n      });\n      console.log(result.data);\n\n      if (result.data.id !== undefined) {\n        await sessionStorage.setItem('username', result.data.username);\n        await sessionStorage.setItem('id', result.data.id);\n        await sessionStorage.setItem('library', JSON.stringify([]));\n        alert(\"Sign up successfully.\");\n        window.location.reload();\n        window.location = '/';\n      } else {\n        this.setState({\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        });\n        alert(\"Sign up fail.\\nUser already.\");\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"RegisterForm\",\n      onSubmit: this.Register,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        name: \"username\",\n        onChange: this.onChangeUsername,\n        value: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        onChange: this.onChangeEmail,\n        value: this.state.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        onChange: this.onChangePassword,\n        value: this.state.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm password\",\n        name: \"confirmpassword\",\n        onChange: this.onChangeConfirmPassword,\n        value: this.state.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/VS Code/DA_OSS/client/src/components/RegisterForm.js"],"names":["React","Component","axios","RegisterForm","constructor","props","onChangeUsername","bind","onChangeEmail","onChangePassword","onChangeConfirmPassword","Register","state","username","email","password","confirmPassword","e","setState","target","value","resetInput","checkStandardInput","error","pattern","length","test","preventDefault","standard","alert","user","result","post","then","catch","err","console","log","data","id","undefined","sessionStorage","setItem","JSON","stringify","window","location","reload","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport \"../css/Register_Login_Form.css\"\r\nimport axios from \"axios\"\r\n\r\n\r\nexport default class RegisterForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\r\n    this.Register = this.Register.bind(this);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    }\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n  onChangeConfirmPassword(e) {\r\n    this.setState({\r\n      confirmPassword: e.target.value,\r\n    });\r\n  }\r\n  resetInput() {\r\n    this.setState({\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    })\r\n  }\r\n  checkStandardInput() {\r\n    let error = \"\";\r\n    let pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (this.state.username.length < 6) {\r\n      error += \"Username must be at least 6 characters\\n\";\r\n    }\r\n    if (this.state.password !== this.state.confirmPassword) {\r\n      error += \"Password is not math confirm password \\n\";\r\n    }\r\n    if (!pattern.test(this.state.password) || !pattern.test(this.state.confirmPassword)) {\r\n      error += \"Password must be at least 8 characters and have at least a lowcase, a uppercase, a number\\n\";\r\n    }\r\n    return error\r\n  }\r\n  async Register(e) {\r\n    e.preventDefault();\r\n    let standard = this.checkStandardInput();\r\n    if (standard.length > 0) {\r\n      alert(standard)\r\n    }\r\n    else {\r\n      let user = {\r\n        username: this.state.username,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      }\r\n\r\n      let result = await axios.post(\"https://amadas.herokuapp.com/accounts\", user).then()\r\n        .catch(err => { alert(\"Sign up fail\\n\" + err + \"\\n\") })\r\n      console.log(result.data)\r\n      if (result.data.id !== undefined) {\r\n        await sessionStorage.setItem('username', result.data.username)\r\n        await sessionStorage.setItem('id', result.data.id)\r\n        await sessionStorage.setItem('library', JSON.stringify([]))\r\n        alert(\"Sign up successfully.\")\r\n        window.location.reload()\r\n        window.location = '/'\r\n      }\r\n      else {\r\n        this.setState({\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        })\r\n        alert(\"Sign up fail.\\nUser already.\")\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"RegisterForm\" onSubmit={this.Register}>\r\n        <label >Username</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          name=\"username\"\r\n          onChange={this.onChangeUsername}\r\n          value={this.state.username}\r\n        />\r\n        <label >Email</label>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          onChange={this.onChangeEmail}\r\n          value={this.state.email}\r\n        />\r\n        <label >Password</label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          onChange={this.onChangePassword}\r\n          value={this.state.password}\r\n        />\r\n        <label >Confirm password</label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm password\"\r\n          name=\"confirmpassword\"\r\n          onChange={this.onChangeConfirmPassword}\r\n          value={this.state.confirmPassword}\r\n        />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}